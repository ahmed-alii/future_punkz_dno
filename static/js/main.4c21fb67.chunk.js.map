{"version":3,"sources":["components/Footer.jsx","components/cards/GameCards.jsx","components/Game.jsx","components/Header.jsx","components/CarouselItems.jsx","components/HeroSection.jsx","components/Roadmap.jsx","components/Story.jsx","components/Team.jsx","pages/Home.jsx","redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","pages/Mint.jsx","App.js","index.js"],"names":["Footer","className","GameCards","image","name","title1","title2","title3","title4","title5","title6","bgColor","map","item","src","alt","Game","id","Header","href","type","to","CarouselItems","settings","slidesToShow","slidesToScroll","autoplay","arrows","dots","autoplaySpeed","speed","cssEase","rtl","HeroSection","Roadmap","title","des","borderColor","Story","Team","img","cardStyle","Home","initialState","loading","account","smartContract","web3","errorMsg","blockchainReducer","state","action","payload","totalSupply","cost","error","dataReducer","availableForMint","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","dispatch","a","getState","methods","call","PUBLIC_SALES_PRICE","console","log","connectFailed","updateAccount","fetch","headers","Accept","abiResponse","json","abi","configResponse","CONFIG","provider","Web3","providers","HttpProvider","Web3EthContract","setProvider","PunksContract","CONTRACT_ADDRESS","document","querySelector","innerHTML","MAX_SUPPLY","loadTotalSupply","Mint","useDispatch","useSelector","useState","claimingNft","setClaimingNft","feedback","setFeedback","mintAmount","setMintAmount","SCAN_LINK","NETWORK","NAME","SYMBOL","ID","NFT_NAME","WEI_COST","DISPLAY_COST","GAS_LIMIT","MARKETPLACE","MARKETPLACE_LINK","SHOW_BACKGROUND","MAX_PER_TX","SET_CONFIG","getData","getConfig","config","useEffect","Number","onClick","e","preventDefault","window","ethereum","isMetaMask","request","method","accounts","SmartContractObj","on","location","reload","disabled","newMintAmount","decrementMintAmount","style","textAlign","color","incrementMintAmount","gasLimit","totalCostWei","String","totalGasLimit","publicSalesMint","send","from","value","once","err","then","receipt","claimNFTs","vertical","App","exact","path","component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4c21fb67.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"Footer\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-8 mx-auto\">\r\n            <p>Copyright © 2021 FuturePunkz DAO. All Rights Reserved.</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\n\r\nconst GameCards = () => {\r\n  const data = [\r\n    {\r\n      image: \"image 1.png\",\r\n      name: \"Psychic Punkz\",\r\n      title1: \"- Female/ Male\",\r\n      title2: \"- Supply: 2195\",\r\n      title3: \"- Access to Discord clubhouse\",\r\n      title4: \"- Whitelist pass for V2\",\r\n      title5: \"- Acces to Metaverse clubhouse\",\r\n      title6: \"- Whitelist Pass for V2\",\r\n      bgColor: \"firstCard \",\r\n    },\r\n    {\r\n      image: \"image 4.png\",\r\n      name: \"Alchemist Punkz\",\r\n      title1: \"- Female/ Male\",\r\n      title2: \"- Supply: 2195\",\r\n      title3: \"- Access to Discord clubhouse\",\r\n      title4: \"- Whitelist pass for V2\",\r\n      title5: \"- Acces to Metaverse clubhouse\",\r\n      title6: \"- Whitelist Pass for V2\",\r\n      bgColor: \"secondCard\",\r\n    },\r\n    {\r\n      image: \"image 6.png\",\r\n      name: \"Legendary Monkz\",\r\n      title1: \"- Supply: 54\",\r\n      title2: \"- Types: Fidenza, Jedi, Neo, Ether, Hero\",\r\n      title3: \"- Access to Metaverse Clubhouse\",\r\n      title4: \"- Access to Discord Clubhouse\",\r\n      title5: \"- Free mint for V2\",\r\n      title6: \" \",\r\n      bgColor: \"thirdCard\",\r\n    },\r\n  ];\r\n  return (\r\n    <div className=\"GameCards\">\r\n      <div className=\"row\">\r\n        {data.map((item) => (\r\n          <div className=\"col-md-4\">\r\n            <div className=\"cards\">\r\n              <div className={item.bgColor}>\r\n                <img\r\n                  className=\"img-fluid\"\r\n                  src={`/images/${item.image}`}\r\n                  alt=\"\"\r\n                />\r\n                <h5 className=\"titleName\">{item.name}</h5>\r\n                <ul className=\"cardlist\">\r\n                  <li>{item.title1}</li>\r\n                  <li>{item.title2}</li>\r\n                  <li>{item.title3}</li>\r\n                  <li>{item.title4}</li>\r\n                  <li>{item.title5}</li>\r\n                  <li>{item.title6}</li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameCards;\r\n","import React from \"react\";\r\nimport GameCards from \"./cards/GameCards\";\r\n\r\nconst Game = () => {\r\n    return (\r\n        <div className=\"Game\" id=\"gameSection\">\r\n            <div className=\"container\">\r\n                <h1 className=\"mainHeading\">Who are we?</h1>\r\n                <p className=\"subText\">We are the Punkz of the Future.</p>\r\n                <p>\r\n                    We represent the values of decentralization, community and freedom. Imagine what the evolution of\r\n                    Cryptopunks would look like. Thats us!\r\n                    <br/>\r\n                    Futuristic mask styles, freaky hairstyles, neon eyes, lightsabers, cyber-shades, 3 species and many\r\n                    unique traits that make our collection the freshest Punk style artwork that’s out there.\r\n                    <br/>\r\n                    Some traits and backgrounds are inspired and paying homage to Fidenza, Cyberkongz, Cryptoadz,\r\n                    Dystopunks, Cryptopunks, and the culture of our generation. By holding one future punk you are\r\n                    holding the membership pass to our DAO ecosystem with future drops and many perks.\r\n                    <br/>\r\n                    We believe that web3 is the Future and that we can create a decentralized world.\r\n                     <br/><br/>\r\n                    <strong>Lets DAO it the right way.</strong>\r\n                </p>\r\n                <div>\r\n                    <GameCards/>\r\n                </div>\r\n                <div className=\"row my-4\">\r\n                    <div className=\"col-md-4\">\r\n                        <p>Psychic Punkz have the power to buy and flip.</p>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        <p>Alchemist Punkz have the power to buy and hold.</p>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        <p>Legendary Monkz have the power to pick a side</p>\r\n                    </div>\r\n                    <div className=\"col-12 my-3\">\r\n                        <p>\r\n                            The goal is to have more in your wallet than the other team by the\r\n                            end of the game. Small battles and attacks gives your team the\r\n                            opportunity to challenge the others and steal from them.\r\n                        </p>\r\n                        <p>\r\n                            The winner gets the right over both wallets. We will not only\r\n                            focus on buying NFTs but also on crypto currencies and metaverse\r\n                            land. Share your best alpha with your tribe, strategize and raise\r\n                            the value of your token. Let the battle begin!\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Game;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"Header\" id=\"headerSection\">\r\n      <div className=\"container\">\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark\">\r\n          <a className=\"navbar-brand\" href=\"#\">\r\n            <img className=\"img-fluid\" src=\"/images/logo.png\" alt=\"\" />\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav ms-auto\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"#homeSection\">\r\n                  Home\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/Mint\">\r\n                  Mint\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"#gameSection\">\r\n                  DAO Game\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"#storySection\">\r\n                  Story\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"#roadmapSection\">\r\n                  Roadmap\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"#teamSection\">\r\n                  Team\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </nav>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport Slider from \"react-slick\";\r\n\r\nconst CarouselItems = ({ rtl }) => {\r\n  const Items = [\r\n    {\r\n      image: \"image 14.png\",\r\n    },\r\n    {\r\n      image: \"image 1.png\",\r\n    },\r\n    {\r\n      image: \"image 4.png\",\r\n    },\r\n    {\r\n      image: \"image 5.png\",\r\n    },\r\n    {\r\n      image: \"image-5.png\",\r\n    },\r\n    {\r\n      image: \"image 44.png\",\r\n    },\r\n    {\r\n      image: \"image 19.png\",\r\n    },\r\n    {\r\n      image: \"image 37.png\",\r\n    },\r\n    {\r\n      image: \"image 14.png\",\r\n    },\r\n    {\r\n      image: \"image 1.png\",\r\n    },\r\n    {\r\n      image: \"image 4.png\",\r\n    },\r\n  ];\r\n  var settings = {\r\n    slidesToShow: 9,\r\n    slidesToScroll: 1,\r\n    autoplay: true,\r\n    arrows: false,\r\n    dots: false,\r\n    autoplaySpeed: 0,\r\n    speed: 10000,\r\n    cssEase: 'linear',\r\n    rtl: rtl,\r\n  };\r\n  return (\r\n    <div className=\"CarouselItems\">\r\n      {\" \"}\r\n      <Slider {...settings}>\r\n        {Items.map((item) => (\r\n          <img src={`/images/${item.image}`} alt=\"\" className=\"p-2\" />\r\n        ))}\r\n      </Slider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CarouselItems;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CarouselItems from \"./CarouselItems\";\r\n\r\nconst HeroSection = () => {\r\n  return (\r\n    <section className=\"HeroSection\" id=\"homeSection\">\r\n      <div className=\"container\">\r\n        <div>\r\n          <img className=\"img-fluid\" src=\"/images/logo.png\" alt=\"\" />\r\n        </div>\r\n        <p className=\"mainText\">\r\n            4444 Future Punkz enter the Blockchain to disrupt the corrupt financial system one JPEG at a time.\r\n            <br/> Welcome to the Revolution!\r\n        </p>\r\n      </div>\r\n      <div>\r\n        <CarouselItems rtl={false} />\r\n      </div>\r\n      <div>\r\n        <CarouselItems rtl={true} />\r\n      </div>\r\n      <div className=\"container\">\r\n        <div>\r\n          <p className=\"price\">Mint price: Free/0.0077 + gas</p>\r\n          <Link to=\"/Mint\" className=\"mintBtn\">\r\n            mint now\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default HeroSection;\r\n","import React from \"react\";\r\n\r\nconst Roadmap = () => {\r\n  const content = [\r\n    {\r\n      title: \"- LAUNCH -\",\r\n      des: \"4444 Future Punkz Genesis will be released to the blockchain. Alchemists, Psychics and Legendary Monkz enter the metaverse\",\r\n      borderColor: \"borderOne\",\r\n    },\r\n    {\r\n      title: \"- THE DAO GAME - \",\r\n      des: \"Psychics vs Alchemists! Flipping vs holding! Who is gonna make it? Read the game instructions and choose your tribe.\",\r\n      borderColor: \"borderTwo\",\r\n    },\r\n    {\r\n      title: \"- DONATION -\",\r\n      des: \"Let’s make a donation from the team wallet to an organization of your choice. We can also add something from the DAO wallet if you feel generous;)\",\r\n      borderColor: \"borderThree\",\r\n    },\r\n    {\r\n      title: \"- NEXT LEVEL - \",\r\n      des: \"Time to expand the battle and create something unique. Future Punkz DAO members and artists will conspire to create our v2 collection. One word: Anime\",\r\n      borderColor: \"borderOne\",\r\n    },\r\n    {\r\n      title: \"- MERCH -\",\r\n      des: \"Merch is merch. Let’s make something dope\",\r\n      borderColor: \"borderTwo\",\r\n    },\r\n    {\r\n      title: \"- V2 -\",\r\n      des: \"V2 to the world! Imagine the first community created bluechip. A part of these sales will also be allocated to the DAO wallet.\",\r\n      borderColor: \"borderThree\",\r\n    },\r\n    {\r\n      title: \"- UTOPIA ROADMAP 2.0 -\",\r\n      des: \" Metaverse - launchpad - IRL events The future is DAO!\",\r\n      borderColor: \"borderOne\",\r\n    },\r\n  ];\r\n  return (\r\n    <div className=\"Roadmap\" id=\"roadmapSection\">\r\n      <div className=\"container\">\r\n        <h1>Roadmap</h1>\r\n        <p className=\"subText\">\r\n          First stop moon. Second stop jupiter. Third stop UTOPIA!\r\n        </p>\r\n        <div className=\"roadmapCard\">\r\n          {content.map((item) => (\r\n            <div className={item.borderColor}>\r\n              <h5 className=\"subText\">{item.title}</h5>\r\n              <p>{item.des}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <p>\r\n          There will be a lot of discussing, exchanging, voting and\r\n          brainstorming. Together with the community we will create the best\r\n          roadmap for our DAO. These are some milestones on that road. But we\r\n          will stay dynamic and fluid with the times, with our evolution and\r\n          most importantly with what brings us joy and fulfillment.\r\n        </p>\r\n        <p> The destination is clear… </p>\r\n        <p>UTOPIA</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Roadmap;\r\n","import React from \"react\";\r\n\r\nconst Story = () => {\r\n  return (\r\n    <div className=\"Story\" id=\"storySection\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <h1>STORY</h1>\r\n            <p className=\"subText\">Battle for Utopia</p>\r\n            <p>\r\n              In the mountains of Nepal, a cave was discovered, holding the\r\n              story of 4 legendary Monkz… <br /> It is said that they were so\r\n              wise, they created a city where people lived in harmony with their\r\n              finances, decentralized from authority. UTOPIA.\r\n            </p>\r\n            <p>\r\n              The true history of the Monkz has long been forgotten, but legends\r\n              and rumors of a portal that leads to their world have been part of\r\n              many cultures’ lore for thousands of years. Some call it the vault\r\n              of time. Every time the vault opens, a war breaks out between the\r\n              world’s most powerful tribes to claim the right to enter the lost\r\n              valley of WGMI and gain access to the secret riches of Utopia.\r\n            </p>\r\n            <p>\r\n              In the year 4444, the portal opened and war broke out once again.\r\n              Two great factions rose, The Psychic Punkz and the Alchemist\r\n              Punkz. Which tribe will make it to the city of Utopia in the Monkz\r\n              metaverse?\r\n            </p>\r\n            <p>\r\n              Psychic Punkz possess the power of seeing the short-term future\r\n              and therefore are excellent at fast decisions and flipping.\r\n              Alchemist Punkz rely on their patience and conviction and\r\n              therefore can calculate what projects will prevail long-term.\r\n            </p>\r\n            <p>CHOOSE YOUR TRIBE.</p>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <div className=\"row\">\r\n              <div className=\"col-4\">\r\n                <div>\r\n                  <img\r\n                    className=\"img-fluid\"\r\n                    src=\"/images/image 19.png\"\r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <img className=\"img-fluid\" src=\"/images/image 8.png\" alt=\"\" />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-8\">\r\n                <div>\r\n                  <img\r\n                    className=\"img-fluid\"\r\n                    src=\"/images/image 16.jpg\"\r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-4\">\r\n                <div>\r\n                  <img\r\n                    className=\"img-fluid\"\r\n                    src=\"/images/image 14.png\"\r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-4\">\r\n                <div>\r\n                  <img\r\n                    className=\"img-fluid\"\r\n                    src=\"/images/image 21.png\"\r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-4\">\r\n                <div>\r\n                  <img\r\n                    className=\"img-fluid\"\r\n                    src=\"/images/image 34.png\"\r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Story;\r\n","import React from \"react\";\r\n\r\nconst Team = () => {\r\n  const cardData = [\r\n    {\r\n      img: \"image 12.png\",\r\n      title: \"Numa Saca\",\r\n      des: \"Founder Community manager\",\r\n      cardStyle: \"Card1\",\r\n    },\r\n    {\r\n      img: \"image 8.png\",\r\n      title: \"Solo Monk\",\r\n      des: \"Founder Creative director\",\r\n      cardStyle: \"Card2\",\r\n    },\r\n    {\r\n      img: \"image 10.png\",\r\n      title: \"Pixdus\",\r\n      des: \"Artist\",\r\n      cardStyle: \"Card3\",\r\n    },\r\n    {\r\n      img: \"image 20.png\",\r\n      title: \"Olof888\",\r\n      des: \"Discord Admin Marketing Manager\",\r\n      cardStyle: \"Card1\",\r\n    },\r\n    {\r\n      img: \"image 2.png\",\r\n      title: \"sayonara\",\r\n      des: \"Developer\",\r\n      cardStyle: \"Card4\",\r\n    },\r\n    {\r\n      img: \"image 38.png\",\r\n      title: \"parliamentDEV\",\r\n      des: \"Developer\",\r\n      cardStyle: \"Card5\",\r\n    },\r\n    {\r\n      img: \"image 39.png\",\r\n      title: \"69Hunter\",\r\n      des: \"Developer\",\r\n      cardStyle: \"Card6\",\r\n    },\r\n    {\r\n      img: \"image 42.png\",\r\n      title: \"macovey\",\r\n      des: \"UI/UX Designer\",\r\n      cardStyle: \"Card3\",\r\n    },\r\n  ];\r\n  return (\r\n    <div className=\"Team\" id=\"teamSection\">\r\n      <div className=\"container\">\r\n        <h1>Team</h1>\r\n        <div className=\"row\">\r\n          {cardData.map((item) => (\r\n            <div className=\"col-md-3 my-3\">\r\n              <div className={item.cardStyle}>\r\n                <img className=\"img-fluid\" src={`/images/${item.img}`} alt=\"\" />\r\n                <h5>{item.title}</h5>\r\n                <p>{item.des}</p>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Team;\r\n","import React from \"react\";\r\nimport Footer from \"../components/Footer\";\r\nimport Game from \"../components/Game\";\r\nimport Header from \"../components/Header\";\r\nimport HeroSection from \"../components/HeroSection\";\r\nimport Roadmap from \"../components/Roadmap\";\r\nimport Story from \"../components/Story\";\r\nimport Team from \"../components/Team\";\r\n// import Mint from \"./components/Mint\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className=\"Home\">\r\n      <div>\r\n        <Header />\r\n        <HeroSection />\r\n        <Game />\r\n        <Story />\r\n        <Roadmap />\r\n        <Team />\r\n        {/* <Mint /> */}\r\n        <Footer />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","const initialState = {\n  loading: false,\n  account: null,\n  smartContract: null,\n  web3: null,\n  errorMsg: \"\",\n};\n\nconst blockchainReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CONNECTION_REQUEST\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n    case \"CONNECTION_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        account: action.payload.account,\n        smartContract: action.payload.smartContract,\n        web3: action.payload.web3,\n      };\n    case \"CONNECTION_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        errorMsg: action.payload,\n      };\n    case \"UPDATE_ACCOUNT\":\n      return {\n        ...state,\n        account: action.payload.account,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default blockchainReducer;\n","const initialState = {\n  loading: false,\n  totalSupply: 215,\n  cost: 0,\n  error: false,\n  errorMsg: \"\",\n};\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CHECK_DATA_REQUEST\":\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        totalSupply: action.payload.totalSupply,\n        cost: action.payload.cost,\n        availableForMint: action.payload.availableForMint,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        error: true,\n        errorMsg: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\nimport dataReducer from \"./data/dataReducer\";\n\nconst rootReducer = combineReducers({\n  blockchain: blockchainReducer,\n  data: dataReducer,\n});\n\nconst middleware = [thunk];\nconst composeEnhancers = compose(applyMiddleware(...middleware));\n\nconst configureStore = () => {\n  return createStore(rootReducer, composeEnhancers);\n};\n\nconst store = configureStore();\n\nexport default store;\n","// log\nimport store from \"../store\";\n\nconst fetchDataRequest = () => {\n  return {\n    type: \"CHECK_DATA_REQUEST\",\n  };\n};\n\nconst fetchDataSuccess = (payload) => {\n  return {\n    type: \"CHECK_DATA_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst fetchDataFailed = (payload) => {\n  return {\n    type: \"CHECK_DATA_FAILED\",\n    payload: payload,\n  };\n};\n\nexport const fetchData = (account) => {\n  return async (dispatch) => {\n    dispatch(fetchDataRequest());\n    try {\n      const totalSupply = await store\n        .getState()\n        .blockchain.smartContract.methods.totalSupply()\n        .call();\n      const cost = await store\n        .getState()\n        .blockchain.smartContract.methods.PUBLIC_SALES_PRICE()\n        .call();\n\n      dispatch(\n        fetchDataSuccess({\n          totalSupply,\n          cost,\n          availableForMint: 7,\n        })\n      );\n    } catch (err) {\n      console.log(err);\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\n    }\n  };\n};\n","// constants\nimport Web3EthContract from \"web3-eth-contract\";\nimport Web3 from \"web3\";\n// log\nimport { fetchData } from \"../data/dataActions\";\n\nconst connectRequest = () => {\n  return {\n    type: \"CONNECTION_REQUEST\",\n  };\n};\n\nconst connectSuccess = (payload) => {\n  return {\n    type: \"CONNECTION_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst connectFailed = (payload) => {\n  return {\n    type: \"CONNECTION_FAILED\",\n    payload: payload,\n  };\n};\n\nconst updateAccountRequest = (payload) => {\n  return {\n    type: \"UPDATE_ACCOUNT\",\n    payload: payload,\n  };\n};\n\nexport const connect = () => {\n  return async (dispatch) => {\n    dispatch(connectRequest());\n    const abiResponse = await fetch(\"/config/abi.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const abi = await abiResponse.json();\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const CONFIG = await configResponse.json();\n    const { ethereum } = window;\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\n    if (metamaskIsInstalled) {\n      Web3EthContract.setProvider(ethereum);\n      let web3 = new Web3(ethereum);\n      try {\n        const accounts = await ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        const networkId = await ethereum.request({\n          method: \"net_version\",\n        });\n        if (networkId == CONFIG.NETWORK.ID) {\n          const SmartContractObj = new Web3EthContract(\n            abi,\n            CONFIG.CONTRACT_ADDRESS\n          );\n          dispatch(\n            connectSuccess({\n              account: accounts[0],\n              smartContract: SmartContractObj,\n              web3: web3,\n            })\n          );\n          // Add listeners start\n          ethereum.on(\"accountsChanged\", (accounts) => {\n            dispatch(updateAccount(accounts[0]));\n          });\n          ethereum.on(\"chainChanged\", () => {\n            window.location.reload();\n          });\n          // Add listeners end\n        } else {\n          dispatch(connectFailed(`Change network to ${CONFIG.NETWORK.NAME}.`));\n        }\n      } catch (err) {\n        dispatch(connectFailed(\"Something went wrong.\"));\n      }\n    } else {\n      dispatch(connectFailed(\"Install Metamask.\"));\n    }\n  };\n};\n\nexport const updateAccount = (account) => {\n  return async (dispatch) => {\n    dispatch(updateAccountRequest({ account: account }));\n    dispatch(fetchData(account));\n  };\n};\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { connect } from \"../redux/blockchain/blockchainActions\";\r\nimport { fetchData } from \"../redux/data/dataActions\";\r\nimport Slider from \"react-slick\";\r\nimport Web3EthContract from \"web3-eth-contract\";\r\nimport Web3 from \"web3\";\r\n\r\nconst truncate = (input, len) => (input.length > len ? `${input.substring(0, len)}...` : input);\r\n\r\nasync function loadTotalSupply() {\r\n  const abiResponse = await fetch(\"/config/abi.json\", {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Accept: \"application/json\",\r\n    },\r\n  });\r\n  const abi = await abiResponse.json();\r\n  const configResponse = await fetch(\"/config/config.json\", {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Accept: \"application/json\",\r\n    },\r\n  });\r\n  const CONFIG = await configResponse.json();\r\n\r\n  const provider = new Web3.providers.HttpProvider(\r\n    \"https://eth-mainnet.alchemyapi.io/v2/f46UvqKN605uslUs-bulSi_cyVdvet-f\"\r\n  );\r\n  Web3EthContract.setProvider(provider);\r\n\r\n  const PunksContract = new Web3EthContract(abi, CONFIG.CONTRACT_ADDRESS);\r\n  const totalSupply = await PunksContract.methods.totalSupply().call();\r\n  const element = document.querySelector(\".total-supply\");\r\n  element.innerHTML = `${totalSupply} / ${CONFIG.MAX_SUPPLY}`;\r\n}\r\nloadTotalSupply();\r\n\r\nconst Mint = () => {\r\n  const dispatch = useDispatch();\r\n  const blockchain = useSelector((state) => state.blockchain);\r\n  const data = useSelector((state) => state.data);\r\n  const [claimingNft, setClaimingNft] = useState(false);\r\n  const [feedback, setFeedback] = useState(`Click buy to mint your NFT.`);\r\n  const [mintAmount, setMintAmount] = useState(1);\r\n  const [CONFIG, SET_CONFIG] = useState({\r\n    CONTRACT_ADDRESS: \"\",\r\n    SCAN_LINK: \"\",\r\n    NETWORK: {\r\n      NAME: \"\",\r\n      SYMBOL: \"\",\r\n      ID: 0,\r\n    },\r\n    NFT_NAME: \"\",\r\n    SYMBOL: \"\",\r\n    MAX_SUPPLY: 1,\r\n    WEI_COST: 0,\r\n    DISPLAY_COST: 0,\r\n    GAS_LIMIT: 0,\r\n    MARKETPLACE: \"\",\r\n    MARKETPLACE_LINK: \"\",\r\n    SHOW_BACKGROUND: false,\r\n    MAX_PER_TX: 0,\r\n  });\r\n\r\n  const sliderImages = [\r\n    {\r\n      image: \"image 4.png\",\r\n    },\r\n    {\r\n      image: \"image 5.png\",\r\n    },\r\n    {\r\n      image: \"image 5.png\",\r\n    },\r\n    {\r\n      image: \"image 4.png\",\r\n    },\r\n    {\r\n      image: \"image 4.png\",\r\n    },\r\n    {\r\n      image: \"image 5.png\",\r\n    },\r\n    {\r\n      image: \"image 5.png\",\r\n    },\r\n    {\r\n      image: \"image 4.png\",\r\n    },\r\n  ];\r\n  var settings = {\r\n    vertical: true,\r\n    slidesToShow: 7,\r\n    slidesToScroll: 1,\r\n    autoplay: true,\r\n    arrows: false,\r\n    dots: false,\r\n  };\r\n\r\n  const claimNFTs = () => {\r\n    let cost = CONFIG.WEI_COST;\r\n    let gasLimit = CONFIG.GAS_LIMIT;\r\n    let totalCostWei = String(cost * mintAmount);\r\n    let totalGasLimit = String(gasLimit * mintAmount);\r\n    console.log(\"Cost: \", totalCostWei);\r\n    console.log(\"Gas limit: \", totalGasLimit);\r\n    setFeedback(`Minting your ${CONFIG.NFT_NAME}...`);\r\n    setClaimingNft(true);\r\n    blockchain.smartContract.methods\r\n      .publicSalesMint(mintAmount)\r\n      .send({\r\n        gasLimit: String(totalGasLimit),\r\n        to: CONFIG.CONTRACT_ADDRESS,\r\n        from: blockchain.account,\r\n        value: totalCostWei,\r\n      })\r\n      .once(\"error\", (err) => {\r\n        console.log(err);\r\n        setFeedback(\"Sorry, something went wrong please try again later.\");\r\n        setClaimingNft(false);\r\n      })\r\n      .then((receipt) => {\r\n        console.log(receipt);\r\n        setFeedback(`WOW, the ${CONFIG.NFT_NAME} is yours! go visit Opensea.io to view it.`);\r\n        setClaimingNft(false);\r\n        dispatch(fetchData(blockchain.account));\r\n      });\r\n  };\r\n\r\n  const decrementMintAmount = () => {\r\n    let newMintAmount = mintAmount - 1;\r\n    if (newMintAmount < 1) {\r\n      newMintAmount = 1;\r\n    }\r\n    setMintAmount(newMintAmount);\r\n  };\r\n\r\n  const incrementMintAmount = () => {\r\n    let newMintAmount = mintAmount + 1;\r\n    console.log(data.availableForMint);\r\n    if (newMintAmount > data.availableForMint) {\r\n      newMintAmount = data.availableForMint;\r\n    }\r\n    setMintAmount(newMintAmount);\r\n  };\r\n\r\n  const getData = () => {\r\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\r\n      dispatch(fetchData(blockchain.account));\r\n    }\r\n  };\r\n\r\n  const getConfig = async () => {\r\n    const configResponse = await fetch(\"/config/config.json\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    });\r\n    const config = await configResponse.json();\r\n    SET_CONFIG(config);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getConfig();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [blockchain.account]);\r\n\r\n  return (\r\n    <div className=\"Mint\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"offset-lg-1 col-md-8\">\r\n            <a className=\"logoBrand\" href=\"#\">\r\n              <img className=\"img-fluid\" src=\"/images/logo.png\" alt=\"\" />\r\n            </a>\r\n            <div className=\"h-100 d-flex flex-column  justify-content-center\">\r\n              <h1 className=\"mainHeading\">\r\n                Mint Your NFTS <br /> You can mint up to {data.availableForMint} NFTS at once.\r\n              </h1>\r\n              <p className=\"subText\">The price per Future Punkz NFT is {CONFIG.DISPLAY_COST} ETH.</p>\r\n              <div className=\"numberBtn\">\r\n                <div className=\"darkBtn\">\r\n                  <div className=\"d-flex align-items-center px-3\">\r\n                    <h1>{data.totalSupply}</h1>\r\n                    <span>sold</span>\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <div className=\"d-flex align-items-center px-3\">\r\n                    <span>of</span>\r\n                    <h1>{CONFIG.MAX_SUPPLY}</h1>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {Number(data.totalSupply) >= CONFIG.MAX_SUPPLY ? (\r\n                <>\r\n                  <p className=\"subText mb-0\">The sale has ended.</p>\r\n                  <p className=\"subText mb-0\">You can still find {CONFIG.NFT_NAME} on</p>\r\n                  <p className=\"subText mb-0\">{CONFIG.MARKETPLACE}</p>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <h5>\r\n                    {\" \"}\r\n                    1 {CONFIG.SYMBOL} costs {CONFIG.DISPLAY_COST} {CONFIG.NETWORK.SYMBOL}.\r\n                  </h5>\r\n                  {blockchain.account === \"\" || blockchain.smartContract === null ? (\r\n                    <>\r\n                      <a\r\n                        href=\"#\"\r\n                        className=\"connectBtn\"\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          dispatch(connect());\r\n                          getData();\r\n                        }}\r\n                      >\r\n                        connect\r\n                      </a>\r\n                      {blockchain.errorMsg !== \"\" ? <p>{blockchain.errorMsg}</p> : null}\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <p>{feedback}</p>\r\n                      <div className=\"counter\">\r\n                        <button\r\n                          disabled={claimingNft ? 1 : 0}\r\n                          onClick={(e) => {\r\n                            e.preventDefault();\r\n                            decrementMintAmount();\r\n                          }}\r\n                        >\r\n                          -\r\n                        </button>\r\n                        <span\r\n                          style={{\r\n                            textAlign: \"center\",\r\n                            color: \"var(--accent-text)\",\r\n                          }}\r\n                        >\r\n                          {mintAmount}\r\n                        </span>\r\n                        <button\r\n                          disabled={claimingNft ? 1 : 0}\r\n                          onClick={(e) => {\r\n                            e.preventDefault();\r\n                            incrementMintAmount();\r\n                          }}\r\n                        >\r\n                          +\r\n                        </button>\r\n                      </div>\r\n                      <button\r\n                        className=\"connectBtn\"\r\n                        disabled={claimingNft ? 1 : 0}\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          claimNFTs();\r\n                          getData();\r\n                        }}\r\n                      >\r\n                        {claimingNft ? \"BUSY\" : \"BUY\"}\r\n                      </button>\r\n                    </>\r\n                  )}\r\n                </>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className=\"offset-md-1 offset-lg-0 col-md-2 text-center\">\r\n            <Slider {...settings}>\r\n              {sliderImages.map((item) => (\r\n                <div className=\"img\">\r\n                  <img className=\"img-fluid my-1 w-100\" src={`/images/${item.image}`} alt=\"\" />\r\n                </div>\r\n              ))}\r\n            </Slider>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Mint;\r\n","import \"./App.css\";\nimport Home from \"./pages/Home\";\nimport Mint from \"./pages/Mint\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/Mint\" component={Mint} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}